---
title: "MEK-Analyse" 
author: "Laura Kiemes & Benjamin Dornow"
format: html
editor: visual
toc: true
toc-depth: 2
---

[![](https://www.die-luchse.de/wp-content/uploads/2024/02/Logo-MEK-Wappen.png){fig-alt="MEK Wappen" width="50"}](https://www.die-luchse.de/)

# Setup

```{r setup}
if (!require("pacman")) install.packages("pacman"); library(pacman)
pacman::p_load(
  tidyverse, ggplot2, readr, haven, readxl, here, dplyr, lubridate, patchwork, cli, ggthemes
  )

here::i_am("analyze.qmd")

darkyellow <- "#FAD514"
darkgrey <- "#1D1D1B"

theme_set(theme_minimal())
```

# Data Teamstats

```{r data teamstats}
### Teamstats importieren

teamstats_total <- read_xlsx(
  here::here("2023-bis-2025-Teamstatistiken-R.xlsx"), 
  sheet = 1
  )

codebook_teamstats <- read_xlsx(
  here::here("2023-bis-2025-Teamstatistiken-R.xlsx"), 
  sheet = 2
  )

# Test for two 24/25 games
# teamstats_total[1, "season"] <- 2425
# teamstats_total[1, "date"] <- 20241030
# teamstats_total[2, "season"] <- 2425
# teamstats_total[2, "date"] <- 20250105

### Erster Überblick

head(teamstats_total)
str(teamstats_total)
```

# Data Wrangling Teamstats

```{r data-wrangling teamstats}


### Gegner in Kategorien aufteilen

teamstats_total <- teamstats_total |> 
  mutate(
    oppcat = case_when(
      opptabelle %in% 1:2 ~ 1,
      opptabelle %in% 3:6 ~ 2,
      opptabelle %in% 7:10 ~ 3
      ),
    win = case_when(
      pts %in% 0:1 ~ 0,
      pts %in% 2:3 ~ 1,
    ),
    wintype = factor(
      pts,
      levels = c(0:3),
      labels = c("Niederlage", "Niederlage nach SO", "Sieg nach SO", "Sieg")
    ),
    oppcat = factor(
      oppcat, 
      levels = c(1:3), 
      labels = c("hoch (Playoffs)", "mittel", "niedrig")
      ),
    opp = case_when(
      opp == "eva" ~ "EV Aich",
      opp == "ega" ~ "Augsburg",
      opp == "dor1b" ~ "Dorfen 1B",
      opp == "esvd" ~ "Dachau",
      opp == "esvg" ~ "Gebensbach",
      opp == "evk" ~ "Königsbrunn",
      opp == "ffb1b" ~ "FFB 1B",
      opp == "paf1b" ~ "Pfaffenhofen 1B",
      opp == "sef" ~ "Freising",
      TRUE ~ "Other"
    ),
    heim = as.factor(heim),
    season = gsub("(\\d{2})(\\d{2})", "\\1/\\2", season),
    season = paste("Saison 20", season, sep = ""),
    season = as.factor(season),
    date = lubridate::ymd(date),
    date_ym = date - years(year(date) - 2022),
    strength = (
      opptabelle - max(teamstats_total$opptabelle)) / 
      (min(teamstats_total$opptabelle) - max(teamstats_total$opptabelle)
       )
    )

# Gegner nach Punkten sortieren
summed_points <- teamstats_total |> 
     group_by(opp) |> 
     summarise(Total_Points = sum(pts)) |> 
     arrange(desc(Total_Points)) |> 
     pull(opp)

# Gegner als Faktor mit Sortierung
teamstats_total <- teamstats_total |> 
  mutate(opp = factor(opp, levels = summed_points))

# Nach Saison Jahre angleichen für Visualisierung
for (i in 1:length(levels(teamstats_total$season))) {
  teamstats_total$date_ym[teamstats_total$season == levels(teamstats_total$season)[i]] <-
    teamstats_total$date[teamstats_total$season == levels(teamstats_total$season)[i]] %m-% years(i)
}

  
str(teamstats_total)
```

# Data Playerstats

```{r data playerstats}

playerstats_total <- read_xlsx(
  here::here("2023-bis-2025-Spielerstatistiken-R.xlsx"),
  sheet = 1
)

codebook_playerstats <- read_xlsx(
  here::here("2023-bis-2025-Spielerstatistiken-R.xlsx"),
  sheet = 2
)


head(playerstats_total)
str(playerstats_total)
```

# Data Wrangling Playerstats

```{r data-wrangling playerstats}

# Saison als Faktor
playerstats_total <- playerstats_total |> 
  mutate(
    mek2223 = as.factor(mek2223),
    mek2324 = as.factor(mek2324),
    spg2324 = round(spg2324, 2),
    eff2324 = round(eff2324, 2),
    pos = as.factor(pos)
    )

playerstats_total_2324 <- playerstats_total |>
  filter(gp2324>0)

playerstats_total_2324_goalscorers <- playerstats_total |>
  filter(g2324>0)
# Name als Faktor mit Sortierung
#playerstats_total <- playerstats_total |> 
  #mutate(Name = factor(Name, levels = summed_points))

# 
```

# Analyse Teamstatistiken

## Punkte

### Punkte pro Gegner

```{r plot-points-per-team}
max_tatal_pts_all_seasons <- teamstats_total |> 
  group_by(opp) |> 
  summarize(total_pts_all_seasons = sum(pts)) |> 
  summarise(max_total_pts_all_seasons = max(total_pts_all_seasons)) |> 
  pull()

ggplot(teamstats_total, aes(x = opp, y = pts, fill = season)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(x = "Gegner",
       y = "Punkte",
       fill = "Saison",
       title = "Erzielte Punkte pro Team") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(breaks = seq(0, max_tatal_pts_all_seasons, by = 2), limits = c(0, max_tatal_pts_all_seasons)) +
  scale_fill_colorblind()

```

```{r plot-points-per-team-asc}
ggplot(teamstats_total, aes(x = opp, y = pts, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Gegner", 
       y = "Punkte", 
       fill = "Saison",
       title = "Erzielte Punkte pro Team",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") #+
#  scale_fill_colorblind()
```

### Punkte Auswärts vs Heim

```{r plot-points-per-team-asc}
ggplot(teamstats_total, aes(x = heim, y = pts, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Punkte", 
       fill = "Saison",
       title = "Erzielte Punkte Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim")) #+
#  scale_fill_colorblind()
```


### Punkte über Zeit

```{r plot-punke-saison, fig.asp=0.25}
ggplot(teamstats_total, aes(x = date_ym, y = pts)) +
  geom_line(linewidth = 1) +
  labs(x = "Zeit",
       y = "Punkte",
       title = "Punkte über die Saison") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))
```

## Schüsse

### Schüsse pro Gegner

```{r plot-shotsfor-per-team-asc}
ggplot(teamstats_total, aes(x = opp, y = sf, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Gegner", 
       y = "Torschüsse", 
       fill = "Saison",
       title = "Torschüsse pro Gegner",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") #+
#  scale_fill_colorblind()
```

### Torschüsse gegnerische Mannschaft pro Gegner

```{r plot-shotsagainst-per-team-asc}
ggplot(teamstats_total, aes(x = opp, y = sa, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Gegner", 
       y = "Torschüsse Gegner", 
       fill = "Saison",
       title = "Torschüsse gegnerische Mannschaft pro Gegner",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") #+
#  scale_fill_colorblind()
```

### Schüsse über Zeit

```{r plot-schuesse-saison}
ggplot(teamstats_total, aes(x = date_ym, y = sf)) +
  geom_line(linewidth = 1) +
  labs(x = "Zeit",
       y = "Schüsse",
       title = "Schüsse über die Saison") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))

```

### Schussverteilung

```{r plot-schuesse-hist}
ggplot(teamstats_total, aes(x = sf)) +
  geom_histogram(binwidth = 4) +
  labs(x = "Anzahl Torschüsse",
       y = "Häufigkeit",
       title = "Histogramm Torschüsse",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +

  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))
```

## Tore

### Tore pro Gegner

```{r plot-goals-per-team-asc}
ggplot(teamstats_total, aes(x = opp, y = gf, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Gegner", 
       y = "Tore", 
       fill = "Saison",
       title = "Tore pro Gegner",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") #+
#  scale_fill_colorblind()
```

### Gegentore pro Gegner

```{r plot-goalsagainst-per-team-asc}
ggplot(teamstats_total, aes(x = opp, y = ga, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Gegner", 
       y = "Gegentore", 
       fill = "Saison",
       title = "Gegentore pro Gegner",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") #+
#  scale_fill_colorblind()

```

### Tore über Zeit

```{r plot-tore-saison}
ggplot(teamstats_total, aes(x = date_ym, y = gf)) +
  geom_line(linewidth = 1) +
  labs(x = "Zeit",
       y = "Tore",
       title = "Tore über die Saison") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))

```

### Torverteilung

```{r plot-tore-hist}
ggplot(teamstats_total, aes(x = gf)) +
  geom_histogram(binwidth = 1) +
  labs(x = "Tore",
       y = "Anzahl",
       title = "Tore") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))
```

## Auswärts vs Heim

### Tore Auswärts vs Heim

```{r plot-goals-home-vs-goals-away}
ggplot(teamstats_total, aes(x = heim, y = gf, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Tore", 
       fill = "Saison",
       title = "Erzielte Tore Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim"))#+
  #scale_fill_colorblind()
```

### Gegentore Auswärts vs Heim

```{r plot-goalsagainst-home-vs-goalsagainst-away}
ggplot(teamstats_total, aes(x = heim, y = ga, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Gegentore", 
       fill = "Saison",
       title = "Kassierte Gegentore Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim"))#+
  #scale_fill_colorblind()
```

### Überzahlsituationen Auswärts vs Heim

```{r plot-pp-home-vs-pp-away}
ggplot(teamstats_total, aes(x = heim, y = pp, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Überzahlsituationen", 
       fill = "Saison",
       title = "Überzahlsituationen Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim"))#+
  #scale_fill_colorblind()
```

### Überzahltore Auswärts vs Heim

```{r plot-ppg-home-vs-ppg-away}
ggplot(teamstats_total, aes(x = heim, y = ppg, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Powerplays", 
       fill = "Saison",
       title = "Überzahltore Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim"))#+
  #scale_fill_colorblind()
```

### Unterzahlsituationen Auswärts vs Heim

```{r plot-pk-home-vs-pk-away}
ggplot(teamstats_total, aes(x = heim, y = pk, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Unterzahlsituationen", 
       fill = "Saison",
       title = "Unterzahlsituationen Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim"))#+
  #scale_fill_colorblind()
```

### Unterzahlgegentore Auswärts vs Heim

```{r plot-pkga-home-vs-pkga-away}
ggplot(teamstats_total, aes(x = heim, y = pkga, fill = season)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
  labs(x = "Auswärts/Heim", 
       y = "Unterzahlgegentore", 
       fill = "Saison",
       title = "Unterzahlgegentore Auswärts vs Heim",
       subtitle = "Vergleich Saison 2023/24 mit Saison 2022/23") +
  scale_x_discrete(labels = c("Auswärts", "Heim"))#+
  #scale_fill_colorblind()
```

## Schussquote

### Schussquote über Zeit

```{r plot-schussquote-zeit, fig.asp=0.25}
ggplot(teamstats_total, aes(x = date_ym, y = spct, color = season)) +
  geom_line(linewidth = 1) +
  labs(x = "Zeit",
       y = "Schussquote",
       title = "Schussquote über die Saison") +
  scale_color_colorblind()
```

### Schussquote über Zeit nach Saison

```{r plot-schussquote-saison}
ggplot(teamstats_total, aes(x = date_ym, y = spct)) +
  geom_line(linewidth = 1) +
  labs(x = "Zeit",
       y = "Schussquote",
       title = "Schussquote über die Saison") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))
```

### Schussquote + Fangquote (Glück) über Zeit

```{r plot-schussquote-fangquote-saison}
ggplot(teamstats_total, aes(x = date_ym, y = pdo)) +
  geom_line(linewidth = 1) +
  geom_hline(yintercept = 1, color = "red", linetype = "dashed") +
  labs(x = "Zeit",
       y = "Schussquote + Fangquote",
       title = "PDO: Schussquote + Fangquote",
       subtitle = "Glück > 1, Pech < 1") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))
```

## Tordifferenz

### Tordifferenz über Zeit

```{r plot-tordifferenz-saison}
ggplot(teamstats_total, aes(x = date_ym, y = gd)) +
  geom_line(linewidth = 1) +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(x = "Zeit",
       y = "Tordifferenz",
       title = "Tordifferenz über die Saison") +
  facet_grid(rows = vars(season)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))

```

## Siege/Niederlage

```{r plot-wintype}
max_wintype_count <- 
  teamstats_total |> 
  group_by(wintype, season) |> 
  count() |> 
  ungroup() |> 
  summarise(max = max(n)) |> 
  pull()

ggplot(teamstats_total, aes(x = wintype)) +
  geom_bar() +
  labs(x = "Typ",
       y = "Anzahl",
       title = "Siege und Niederlagen nach Saison") +
  facet_grid(rows = vars(season)) +
  scale_y_continuous(breaks = seq(0, max_wintype_count, by = 2)) +
  theme(strip.text.y = element_text(angle = 0, hjust = 1))
```

## Zusammenhänge

### Schüsse - Tore nach Stärke Gegner

```{r}
ggplot(teamstats_total, aes(x = sf, y = gf, color = strength)) +
  geom_point() +
  scale_color_gradient(
    name = "Stärke Gegner", 
    breaks = c(min(teamstats_total$strength), max(teamstats_total$strength)), 
    labels = c("hoch", "niedrig"),
    high = "#F0E442",
    low = "#D55E00") +
  labs(x = "Schüsse",
       y = "Tore",
       title = "Schüsse und Tore") 
```

```{r}
ggplot(teamstats_total, aes(x = sf, y = gf, color = oppcat)) +
  geom_point() +
  labs(x = "Schüsse",
       y = "Tore",
       color = "Stärke Gegner",
       title = "Schüsse und Tore")
```

```{r}
ggplot(teamstats_total, aes(x = sf, y = gf)) +
  geom_point(alpha=.5) +
  labs(x = "Schüsse",
       y = "Tore",
       title = "Schüsse und Tore") +
  stat_smooth(method="glm", se=TRUE)
```

### Schussdifferenz - Tordifferenz

```{r}
ggplot(teamstats_total, aes(x = sd, y = gd, color = opptabelle)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "grey") +
  geom_vline(xintercept = 0, color = "grey") +
  labs(x = "Schussdifferenz",
       y = "Tordifferenz",
       title = "Schussdifferenz und Tordifferenz") 
```

```{r}
ggplot(teamstats_total, aes(x = sd, y = gd, color = oppcat)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "grey") +
  geom_vline(xintercept = 0, color = "grey") +
  labs(x = "Schussdifferenz",
       y = "Tordifferenz",
       title = "Schussdifferenz und Tordifferenz") 
```

```{r}
ggplot(teamstats_total, aes(x = sd, y = gd)) +
  geom_point(alpha=.5) +
  geom_hline(yintercept = 0, color = "grey") +
  geom_vline(xintercept = 0, color = "grey") +
  labs(x = "Schussdifferenz",
       y = "Tordifferenz",
       title = "Schussdifferenz und Tordifferenz") +
  stat_smooth(method="glm", se=TRUE)
```

### Schussquote - Punkte

```{r}
ggplot(teamstats_total, aes(x = spct, y = win, color = opptabelle)) +
  geom_point(alpha=.5) +
  labs(x = "Schussquote",
       y = "Sieg",
       title = "Schussquote und Sieg") 
```

```{r}
ggplot(teamstats_total, aes(x = spct, y = win, color = oppcat)) +
  geom_point(alpha=.5) +
  labs(x = "Schussquote",
       y = "Sieg",
       title = "Schussquote und Sieg") 
```

```{r}
ggplot(teamstats_total, aes(x = spct, y = win)) +
  geom_point(alpha=.5) +
  labs(x = "Schussquote",
       y = "Sieg",
       title = "Schussquote und Sieg") +
  stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial))
```

# Analyse Spielerstatistiken

## Schüsse

### Schüsse pro Spieler 2023/24 - Gesamt

```{r Schüsse pro Spieler 2023/24}

ggplot(playerstats_total_2324, aes(x = name, y = s2324)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
  labs(x = "Spieler", 
       y = "Schüsse",
       title = "Schüsse in der Saison 2023/24",
       subtitle = "Schüsse pro Spieler gesamt") +
  coord_flip()
```

### Schüsse pro Spieler 2023/24 - Schnitt

```{r Schüsse/Spiel pro Spieler 2023/24}

spg2324team <- sum(playerstats_total_2324$s2324)/sum(playerstats_total_2324$gp2324)

ggplot(playerstats_total_2324, aes(x = name, y = spg2324)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
    geom_hline(yintercept = spg2324team, color = "red", linetype = "dashed") +
  labs(x = "Spieler", 
       y = "Schüsse pro Spiel",
       title = "Schüsse in der Saison 2023/24 pro Spieler pro Spiel",
       subtitle = "Gestrichelte Linie: Durchschnitt Schüsse pro Spieler pro Spiel 2023/24") +
  coord_flip()
```

### Effizienz pro Spieler 2023/24 - Vergleich Schnitt 2023/24

```{r Schüsse/Tor pro Spieler 2023/24, Referenz: Effizienz 2023/24}

eff2324team <- sum(playerstats_total_2324$s2324)/sum(playerstats_total_2324$g2324)

ggplot(playerstats_total_2324_goalscorers, aes(x = name, y = eff2324)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
    geom_hline(yintercept = eff2324team, color = "red", linetype = "dashed") +
  labs(x = "Spieler", 
       y = "Schüsse pro Tor",
       title = "Effizienz in der Saison 2023/24",
       subtitle = "Gestrichelte Linie: Durchschnittliche Effizient in der Saison 2023/24") +
  coord_flip()
```

### Effizienz pro Spieler 2023/24 - Vergleich Schnitt 2022/23

```{r Schüsse/Tor pro Spieler 2023/24, Referenz: Effizienz 2022/23}
eff2223team <- 585/69

ggplot(playerstats_total_2324_goalscorers, aes(x = name, y = eff2324)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
    geom_hline(yintercept = eff2223team, color = "red", linetype = "dashed") +
  labs(x = "Spieler", 
       y = "Schüsse pro Tor",
       title = "Effizienz in der Saison 2023/24",
       subtitle = "Gestrichelte Linie: Durchschnittliche Effizient in der Saison 2022/23") +
  coord_flip()
```

### Zusammenhang - Schüsse und Tore pro Spieler

```{r Schüsse und Tore}
ggplot(playerstats_total_2324, aes(x = s2324, y = g2324)) +
  geom_point(alpha=.5) +
  labs(title = "Schüsse und Tore pro Spieler",
       x = "Schüsse Saison 2023/24",
       y = "Tore Saison 2023/24") +
  stat_smooth(method="glm", se=TRUE)
```

### Zusammenhang - Schüsse pro Spiel und Tore pro Spieler

```{r Schüsse/Spiel und Tore}
ggplot(playerstats_total_2324, aes(x = spg2324, y = g2324)) +
  geom_point(alpha=.5) +
  labs(x = "Schüsse/Spiel Saison 2023/24",
       y = "Tore Saison 2023/24",
       title = "Schüsse pro Spiel und Tore pro Spieler",
       subtitle = "Scatterplot zum Zusammenhang zwischen Torschüssen pro Spiel und erzielten Toren") +
  stat_smooth(method="glm", se=TRUE)

# Schlussfolgerung: Häufiger als ein mal pro Spiel schiessen, sonst bleibt ein Treffer unwahrscheinlich!
```

```{r Strafzeiten nach Saison}
ggplot(playerstats_total, aes(x = name)) +
  geom_bar(aes(y = pim2223, fill = "pim2223"), stat = "identity", position = position_dodge(width = 0.9)) +
  geom_bar(aes(y = pim2324, fill = "pim2324"), stat = "identity", position = position_dodge(width = 0.9)) +
  #scale_fill_manual(values = c("pim2223" = "blue", "pim2324" = "red")) +
  labs(x = "Name", y = "Value", fill = "Variables") +
  theme_minimal() +
  coord_flip() +
  scale_fill_colorblind()
```

## Strafen

### Strafminuten pro Spieler - Schnitt, Referenz Durchschnitt 2023/24

```{r HIER: Strafen pro Spieler pro Spiel}
pimpg2324 <- sum(playerstats_total_2324$pim2324)/sum(playerstats_total_2324$gp2324)

ggplot(playerstats_total_2324, aes(x = name, y = pim2324/gp2324)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
    geom_hline(yintercept = pimpg2324, color = "red", linetype = "dashed") +
  labs(x = "Spieler", 
       y = "Strafminuten pro Spiel",
       title = "Strafminuten pro Spieler pro Spiel in der Saison 2023/24",
       subtitle = "Gestrichelte Linie: Durchschnittliche Strafminuten pro Spiel 2023/24") +
  coord_flip()
```

### Strafminuten pro Position - Schnitt, Referenz Durchschnitt 2023/24

```{r HIER: Strafen pro Position pro Spiel}
pimpg2324 <- sum(playerstats_total_2324$pim2324)/sum(playerstats_total_2324$gp2324)

ggplot(playerstats_total_2324, aes(x = pos, y = pim2324/gp2324)) +
  geom_bar(stat = "summary", fun = "sum", position = "dodge", colour = "darkgrey", linewidth = 0.25) +
    geom_hline(yintercept = pimpg2324, color = "red", linetype = "dashed") +
  labs(x = "Spieler", 
       y = "Strafminuten pro Spiel",
       title = "Strafminuten pro Spieler pro Spiel in der Saison 2023/24",
       subtitle = "Gestrichelte Linie: Durchschnittliche Strafminuten pro Spiel 2023/24")
```
